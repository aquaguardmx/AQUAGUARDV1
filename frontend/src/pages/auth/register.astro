---
import '../../styles/global.css';
---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registro</title>
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center px-4">
    <main class="w-full max-w-md sm:bg-white/90 sm:backdrop-blur-sm sm:shadow-2xl sm:rounded-2xl p-4 sm:p-6 flex flex-col gap-4 sm:gap-3 justify-center">
        <header class="flex items-center justify-center gap-3">
            <h1 class="text-xl sm:text-2xl font-semibold text-gray-800">Crear cuenta</h1>
        </header>

        <p class="text-center text-sm text-gray-500 max-w-[85%] mx-auto">Regístrate para acceder al contenido y llevar un mejor registro de tu progreso.</p>

    <form id="registerForm" class="flex flex-col gap-3 sm:gap-2" aria-label="Formulario de registro">
            <div class="flex flex-col gap-2 sm:gap-1">
                <label for="first_name" class="flex flex-col gap-2 sm:gap-1 text-sm text-gray-700">
                    <span class="font-medium">Nombre</span>
                    <input
                        type="text"
                        id="nombre"
                        name="nombre"
                        placeholder="Tu nombre"
                        required
                        class="w-full border border-gray-200 rounded-md p-3 sm:p-1.5 focus:outline-none focus:ring-2 focus:ring-blue-400 shadow-sm"
                    />
                </label>
                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-2">
                            <label for="ap_paterno" class="flex flex-col gap-2 sm:gap-1 text-sm text-gray-700">
                        <span class="font-medium">Apellido paterno</span>
                        <input
                            type="text"
                            id="ap_paterno"
                            name="ap_paterno"
                            placeholder="Apellido paterno"
                            required
                            class="w-full border border-gray-200 rounded-md p-3 sm:p-1.5 focus:outline-none focus:ring-2 focus:ring-blue-400 shadow-sm"
                        />
                    </label>
                    <label for="ap_materno" class="flex flex-col gap-2 sm:gap-1 text-sm text-gray-700">
                        <span class="font-medium">Apellido materno</span>
                        <input
                            type="text"
                            id="ap_materno"
                            name="ap_materno"
                            placeholder="Apellido materno"
                            class="w-full border border-gray-200 rounded-md p-3 sm:p-1.5 focus:outline-none focus:ring-2 focus:ring-blue-400 shadow-sm"
                        />
                    </label>
                </div>
            </div>
            <label for="correo_electronico" class="flex flex-col gap-2 sm:gap-1 text-sm text-gray-700">
                <span class="font-medium">Correo electrónico</span>
                <input
                    type="email"
                    id="correo_electronico"
                    name="correo_electronico"
                    placeholder="tucorreo@ejemplo.com"
                    required
                    class="w-full border border-gray-200 rounded-md p-3 sm:p-1.5 focus:outline-none focus:ring-2 focus:ring-blue-400 shadow-sm"
                />
            </label>
            <label for="contrasena" class="flex flex-col gap-2 sm:gap-1 text-sm text-gray-700">
                <span class="font-medium">Contraseña</span>
                <input
                    type="password"
                    id="contrasena"
                    name="contrasena"
                    placeholder="Al menos 8 caracteres"
                    required
                    class="w-full border border-gray-200 rounded-md p-3 sm:p-1.5 focus:outline-none focus:ring-2 focus:ring-blue-400 shadow-sm"
                />
            </label>
            <button
                type="submit"
                class="bg-blue-600 text-white py-3 sm:py-1.5 rounded-md hover:bg-blue-700 transition-colors shadow-lg w-full text-sm sm:text-sm font-medium"
            >
                Crear cuenta
            </button>
    </form>

    <!-- Elemento para mostrar mensajes de respuesta desde el script -->
    <div id="responseMessage" aria-live="polite" class="text-center text-sm mt-2"></div>

        <div class="flex items-center gap-3">
            <hr class="flex-1 border-t border-gray-200" />
            <span class="text-gray-400 text-sm">o</span>
            <hr class="flex-1 border-t border-gray-200" />
        </div>

        <button
            type="button"
            class="flex items-center justify-center gap-3 border border-gray-200 rounded-lg py-3 hover:bg-gray-50 transition shadow-sm w-full"
            aria-label="Continuar con Google"
        >
            <svg class="w-5 h-5" viewBox="0 0 533.5 544.3" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false">
                <path fill="#4285F4" d="M533.5 278.4c0-17.6-1.6-35-4.8-51.8H272v98h147.1c-6.4 34.8-25.6 64.2-54.6 83.8v69.6h88.3c51.6-47.6 81.7-117.6 81.7-199.6z"/>
                <path fill="#34A853" d="M272 544.3c73.5 0 135.3-24.2 180.4-65.8l-88.3-69.6c-24.6 16.5-56 26.2-92.1 26.2-70.7 0-130.6-47.6-152-111.6H31.6v70.2C76.7 482.2 167.5 544.3 272 544.3z"/>
                <path fill="#FBBC05" d="M120 325.1c-9.6-28.8-9.6-59.8 0-88.6V166.3H31.6C11.7 209.9 0 245.4 0 281.6s11.7 71.7 31.6 115.3L120 325.1z"/>
                <path fill="#EA4335" d="M272 109.5c39.9 0 75.8 13.7 104.1 40.6l78.1-78.1C408.2 19.8 345.4 0 272 0 167.5 0 76.7 62.1 31.6 166.3l88.4 70.2C141.4 157.1 201.3 109.5 272 109.5z"/>
            </svg>
            <span class="text-sm text-gray-700 font-medium">Continuar con Google</span>
        </button>

        <p class="text-center text-gray-500 text-sm">
            ¿Ya tienes cuenta? <a href="../auth/login" class="text-blue-600 hover:underline">Inicia sesión</a>
        </p>
    </main>
    <script>
        // 1. Busca el token en ambos almacenamientos.
      const authToken =
        localStorage.getItem("authToken") ||
        sessionStorage.getItem("authToken");

      // 2. Si el token existe, significa que el usuario ya está logueado.
      if (authToken) {
        console.log("Usuario ya autenticado. Redirigiendo a /home...");

        // 3. Redirige inmediatamente al panel principal.
        window.location.href = "/home";
      }

        // Añadimos una hoja de estilos pequeña para el spinner si no existe
        if (!document.getElementById('register-spinner-style')) {
            const style = document.createElement('style');
            style.id = 'register-spinner-style';
            style.textContent = `
                .rg-spin { animation: rg-spin 1s linear infinite; vertical-align: middle; }
                @keyframes rg-spin { to { transform: rotate(360deg); } }
            `;
            document.head.appendChild(style);
        }

        // Espera a que el DOM esté listo para evitar problemas si el script se ejecuta antes
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.querySelector<HTMLFormElement>('#registerForm');
            let messageDiv = document.getElementById('responseMessage');

            if (!form) {
                console.error('No se encontró el formulario con id "registerForm". Añade id="registerForm" al <form>.');
                return;
            }

            // Si no existe, lo creamos dinámicamente (por seguridad)
            if (!messageDiv) {
                messageDiv = document.createElement('div');
                messageDiv.id = 'responseMessage';
                messageDiv.setAttribute('aria-live', 'polite');
                if (form.parentNode) {
                    form.parentNode.insertBefore(messageDiv, form.nextSibling);
                }
            }

            const messageEl = messageDiv as HTMLElement;

            // Botón submit y estado de carga
            const submitButton = form.querySelector<HTMLButtonElement>('button[type="submit"]');
            const originalButtonHTML = submitButton ? submitButton.innerHTML : 'Crear cuenta';

            function setLoading(isLoading: boolean) {
                if (!submitButton) return;
                if (isLoading) {
                    submitButton.disabled = true;
                    submitButton.setAttribute('aria-busy', 'true');
                    submitButton.innerHTML = `
                        <svg xmlns="http://www.w3.org/2000/svg" class="rg-spin" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="display:inline-block; margin-right:6px;">
                            <circle cx="12" cy="12" r="10" stroke-opacity="0.2"></circle>
                            <path d="M22 12a10 10 0 0 0-10-10" />
                        </svg>
                        <span>Creando...</span>
                    `;
                    submitButton.classList.add('opacity-70', 'cursor-not-allowed');
                } else {
                    submitButton.disabled = false;
                    submitButton.removeAttribute('aria-busy');
                    submitButton.innerHTML = originalButtonHTML;
                    submitButton.classList.remove('opacity-70', 'cursor-not-allowed');
                }
            }

            form.addEventListener('submit', async (event) => {
                event.preventDefault(); 

                if (submitButton && submitButton.disabled) return;

                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());

                setLoading(true);

                try {
                    const response = await fetch('http://127.0.0.1:8000/api/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });

                    const result = await response.json();
                    console.log('Register response', response.status, result);

                    if (!response.ok) {
                        // Si hay errores de validación, los mostramos de forma genérica
                        let errorMessage = 'Error al registrar: ';
                        // result puede ser un objeto con arrays de errores: { campo: ["mensaje"] }
                        if (result && typeof result === 'object') {
                            const messages = [];
                            for (const key in result) {
                                if (Array.isArray(result[key])) {
                                    messages.push(result[key][0]);
                                } else if (typeof result[key] === 'string') {
                                    messages.push(result[key]);
                                }
                            }
                            if (messages.length) errorMessage += messages.join(' | ');
                        } else if (typeof result === 'string') {
                            errorMessage += result;
                        }

                        messageEl.textContent = errorMessage;
                        messageEl.style.color = 'red';
                    } else {
                        messageEl.textContent = '¡Registro exitoso! Serás redirigido.';
                        messageEl.style.color = 'green';
                        form.reset(); // Limpia el formulario
                        setTimeout(() => {
                            window.location.href = '/login'; // Redirige al login
                        }, 2000); // Espera 2 segundos antes de redirigir
                    }
                } catch (error) {
                    console.error('Error de conexión:', error);
                    messageEl.textContent = 'No se pudo conectar con el servidor.';
                    messageEl.style.color = 'red';
                } finally {
                    setLoading(false);
                }
            });
        });
    </script>
</body>
</html>